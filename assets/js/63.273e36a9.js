(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{360:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"有状态无状态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有状态无状态组件"}},[t._v("#")]),t._v(" 有状态无状态组件")]),t._v(" "),s("blockquote",[s("p",[t._v("本文作者："),s("a",{attrs:{href:"https://github.com/CN-YoungYang",target:"_blank",rel:"noopener noreferrer"}},[t._v("阳九五"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("本站地址："),s("a",{attrs:{href:"https://blog.56321654.xyz",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://blog.56321654.xyz"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("在Dart的Flutter框架中，组件(widgets)是构建用户界面的基本构建块，它们分为有状态(stateful)和无状态(stateless)两种类型")]),t._v(" "),s("p",[t._v("在Flutter中，选择使用StatelessWidget还是StatefulWidget取决于你的组件是否需要管理状态。如果组件的行为不依赖于可以改变的状态，那么使用StatelessWidget；如果组件的行为依赖于状态，那么使用StatefulWidget。")]),t._v(" "),s("h2",{attrs:{id:"statelesswidget-无状态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#statelesswidget-无状态组件"}},[t._v("#")]),t._v(" StatelessWidget (无状态组件)")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("定义:")]),t._v(" StatelessWidget是不包含状态的组件,它在任何时候都是相同的,不会因为状态的改变而重新构建.")]),t._v(" "),s("li",[s("strong",[t._v("用途:")]),t._v(" 用于那些不会改变状态的简单组件，例如显示静态文本、图片或任何不随用户交互变化的UI元素。")]),t._v(" "),s("li",[s("strong",[t._v("特点:")]),t._v(" "),s("ul",[s("li",[t._v("构建函数build不会接收任何状态参数.")]),t._v(" "),s("li",[t._v("每次框架需要重建UI时,都会调用build方法,因此StatelessWidget应该尽可能轻量,避免复杂逻辑.")]),t._v(" "),s("li",[t._v("没有与之关联的状态管理.")])])])]),t._v(" "),s("div",{staticClass:"language-dart line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyStatelessWidget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StatelessWidget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BuildContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'I am a stateless widget'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"statefulwidget-有状态组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#statefulwidget-有状态组件"}},[t._v("#")]),t._v(" StatefulWidget (有状态组件)")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("定义:")]),t._v(" StatefulWidget是可以拥有和管理系统状态的组件,当状态改变时,可以通过调用setState来触发组件的重建.")]),t._v(" "),s("li",[s("strong",[t._v("用途:")]),t._v(" 用于需要响应用户输入、处理数据变化或维护临时状态的组件,例如表单、列表视图或任何需要根据状态变化更新UI的组件.")]),t._v(" "),s("li",[s("strong",[t._v("特点:")]),t._v(" "),s("ul",[s("li",[t._v("有一个与之关联的State对象,该对象包含状态数据和setState方法.")]),t._v(" "),s("li",[t._v("可以通过State对象来响应事件和更新UI.")]),t._v(" "),s("li",[t._v("通常比StatelessWidget更复杂,因为它们涉及到状态管理.")])])])]),t._v(" "),s("div",{staticClass:"language-dart line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-dart"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyStatefulWidget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StatefulWidget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  _MyStatefulWidgetState "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_MyStatefulWidgetState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" _MyStatefulWidgetState "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("State")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyStatefulWidget")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  int _counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_incrementCounter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      _counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token metadata function"}},[t._v("@override")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Widget")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BuildContext")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ElevatedButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      onPressed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" _incrementCounter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-literal"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'You pressed me ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("_counter")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" times'")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("h2",{attrs:{id:"主要区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主要区别"}},[t._v("#")]),t._v(" 主要区别")]),t._v(" "),s("p",[t._v("StatelessWidget和StatefulWidget是Flutter中两种不同类型的组件，它们的主要区别在于是否能够存储状态以及如何响应状态变化。")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("状态管理：")]),t._v(" "),s("ul",[s("li",[t._v("StatelessWidget：不能存储状态，每次构建都是全新的，没有记忆能力。适用于不随时间变化的静态组件。")]),t._v(" "),s("li",[t._v("StatefulWidget：能够存储状态，并且可以在状态变化时更新UI。适用于需要根据用户交互或其他因素改变状态的动态组件。")])])]),t._v(" "),s("li",[s("strong",[t._v("生命周期：")]),t._v(" "),s("ul",[s("li",[t._v("StatelessWidget：没有复杂的生命周期，每次框架需要重建界面时，都会调用其build方法。")]),t._v(" "),s("li",[t._v("StatefulWidget：有一个与之关联的State对象，该对象有自己的生命周期，包括创建、更新和销毁。")])])]),t._v(" "),s("li",[s("strong",[t._v("性能：")]),t._v(" "),s("ul",[s("li",[t._v("StatelessWidget：通常性能更好，因为它们不需要管理状态，构建成本较低。")]),t._v(" "),s("li",[t._v("StatefulWidget：可能涉及到更多的性能考虑，因为状态管理可能会导致不必要的重建。")])])]),t._v(" "),s("li",[s("strong",[t._v("使用场景：")]),t._v(" "),s("ul",[s("li",[t._v("StatelessWidget：适用于不需要交互或状态的简单组件，如显示文本、图片等。")]),t._v(" "),s("li",[t._v("StatefulWidget：适用于需要交互或状态管理的复杂组件，如按钮、表单、列表等。")])])]),t._v(" "),s("li",[s("strong",[t._v("构建方法：")]),t._v(" "),s("ul",[s("li",[t._v("StatelessWidget：只有一个build方法，用于构建组件的UI。")]),t._v(" "),s("li",[t._v("StatefulWidget：有一个createState方法，用于创建与之关联的State对象，以及一个build方法，用于构建组件的UI。")])])]),t._v(" "),s("li",[s("strong",[t._v("热重载：")]),t._v(" "),s("ul",[s("li",[t._v("StatelessWidget：在开发过程中，热重载通常更快，因为它们不需要重新创建状态。")]),t._v(" "),s("li",[t._v("StatefulWidget：热重载可能会更复杂，因为状态的重新创建可能会导致状态丢失。")])])]),t._v(" "),s("li",[s("strong",[t._v("重建机制：")]),t._v(" "),s("ul",[s("li",[t._v("StatelessWidget：当父组件重建时，StatelessWidget也会重建。")]),t._v(" "),s("li",[t._v("StatefulWidget：可以通过AutomaticKeepAliveClientMixin和RepaintBoundary等技术来控制重建行为，以优化性能。")])])])]),t._v(" "),s("p",[t._v("总结来说，StatelessWidget适用于静态内容，而StatefulWidget适用于需要管理状态的动态内容。选择使用哪种类型的组件取决于你的具体需求和组件的行为。")])])}),[],!1,null,null,null);s.default=n.exports}}]);